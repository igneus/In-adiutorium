# encoding: utf-8

task :all => [:kompletar, :zaltar, :cteni, :festzaltar, :nedele, :triduum]
task :default => [:all]

RUBY_COMMAND = 'ruby' # was: 'ruby1.9.1'

def genzalm(zalm, options="", adresar='generovane/')
  wd = Dir.pwd
  syrovy = wd+"/zalmy/"+zalm
  peceny = adresar+zalm.gsub(/\.zalm/, '')+'.tex'
  preprocessor = wd+"/../nastroje/psalmpreprocessor.rb"
  file peceny => [syrovy, preprocessor] do
    chdir adresar
    sh "#{RUBY_COMMAND} #{preprocessor} #{options} #{syrovy}"
    chdir wd
    sh "vlna #{peceny}"
  end
  return peceny
end

def genspojenyzalm(zdroje, vysledek, options='', adresar='generovane/')
  wd = Dir.pwd
  syrove = zdroje.map {|zalm| wd+"/zalmy/"+zalm }
  peceny = adresar+vysledek
  preprocessor = wd+"/../nastroje/psalmpreprocessor.rb"
  file peceny => syrove+[preprocessor] do
    chdir adresar
    sh "#{RUBY_COMMAND} #{preprocessor} #{options} --output #{vysledek} --join #{syrove.join " "}"
    chdir wd
    sh "vlna #{peceny}"
  end
  return peceny
end

def test_lilypondbook_version
  v = `lilypond-book --version`
  if v !~ /^2\.14/ then
    STDERR.puts
    STDERR.puts "!!! Expect problems. Compilation of notated parts of the antiphonal works well only with lilypond-book 2.14.x !!!"
    STDERR.puts
  end
end

def make_dirs(struc)
  wd = Dir.pwd
  
  struc.each_key do |k|
    if ! FileTest.directory?(k) then
      Dir.mkdir k
    end
    Dir.chdir k
    make_dirs struc[k]
    Dir.chdir '..'
  end
end

# create directory structure used by the tasks
dirs = { 'generovane' => {'kompletar' => {},
                                                'nedele' => {},
                                                'zaltar' => {},
                                                'ctenizaltar' => {},
                                                'svatecnizaltar' => {},
                                                'triduum' => {},
    'nespornizpevy' => {}},
              'vystup' => {}}
make_dirs dirs

##############
# promenne pouzivane vice ulohami - argumenty pro program psalmpreprocessor.rb
o_canticletitle = " --pretitle \"kantikum\\\\\\\\ \""
o_doxology = " --append \"\\nopagebreak Sláva Otci.\""
o_columns = " --columns"
o_warnmarks = ' --mark-short-verses'

commonoptions_withoutdoxology = "--lettrine --dashes --no-paragraph --guillemets"
commonoptions = commonoptions_withoutdoxology+o_doxology
canticleoptions = commonoptions+o_canticletitle

# prikaz pouzivany ke zpracovani vsech extrahovanych not pro
# nedelni antifonar.
# na konec se pouze pripoji (pripadne dalsi volby a) jmeno souboru ke zpracovani.
splitscores_command = "#{RUBY_COMMAND} -I ../nastroje "+ 
          "../nastroje/splitscores.rb "+
                        "--prepend-text '\\include \"spolecne_antifonar.ly\"\n \\include \"../dilyresponsorii.ly\"' "+
                        "--insert-text \"\\layout { indent = 1.5\\cm \n short-indent = 0\\cm \n"+
                                                                            "\\context {\n \\Staff \n \\consists Custos_engraver \n \\override Custos #'style = #'hufnagel }"+
                                                                            "}\n\" "+
                        "--remove-headers "+
                        "--mode-info "+
                        "--one-clef "+
                        "--ids "

desc "Delete LilyPond-Book's stored snippets"
task :snipclean do
  cd 'vystup'
  sh 'rm -rf tmp*'
  sh 'rm -rf snippet*'
  Dir['*'].each {|f| sh "rm -rf #{f}" if f.size == 2 }
  cd '..'
end

##############
# sv. 1: kompletar

adresar_kompletar = 'generovane/kompletar/'

kompletar_options = commonoptions+" --columns"

kompletar_splitscores_command = splitscores_command + " --output-dir #{adresar_kompletar} "

file "vystup/antifonar_kompletar.pdf" => ["vystup/antifonar_kompletar.tex", "spolecne.tex"] do
  chdir "vystup"
  2.times { sh "pdflatex -shell-escape antifonar_kompletar" }
  chdir ".."
end

cislazalmu_kompletar = [4, 134, 91, 86, 143, 31, 130, 16, 88]
zalmy_kompletar = []
cislazalmu_kompletar.each do |i|
  zalmy_kompletar << genzalm("zalm#{i}.zalm", kompletar_options+" --last-accent-only", adresar_kompletar)
end

zalmy_kompletar << genzalm("kantikum_nuncdimittis.zalm", kompletar_options+' --accents 2:1', adresar_kompletar)

file "vystup/antifonar_kompletar.tex" => (["antifonar_kompletar.lytex", adresar_kompletar+"kompletar_po.ly", 'spolecne_antifonar.ly']+zalmy_kompletar) do
  test_lilypondbook_version
  sh "lilypond-book --output=vystup --pdf antifonar_kompletar.lytex"
end

file (adresar_kompletar+"kompletar_po.ly") => ["../kompletar.ly"] do |t|
  sh kompletar_splitscores_command + t.prerequisites.first
end

desc "Antiphonal for the completory."
task :kompletar => ["vystup/antifonar_kompletar.pdf"]

file 'vystup/antifonar_kompletar-broz.pdf' => ["vystup/antifonar_kompletar.pdf"] do |t|
  nws = t.prerequisites.first.gsub(/\..+$/, '') # input file without suffix
  pages_count =  `pdftk vystup/antifonar_kompletar.pdf dump_data output | grep -i NumberOfPages`.split(" ")[1].to_i
  n = (pages_count % 4 == 0) ? pages_count : pages_count+(4 - (pages_count % 4))
  # argument --signature urcuje pocet stranek na knizni slozku;
  # nastavime ho tak, aby cely kompletar byl v jedinem sesitku
  sh "pdfbook -o vystup --signature #{n} --suffix broz #{nws}.pdf"
end

desc "Completory arranged for printing as a booklet"
task :kompletar_booklet => ['vystup/antifonar_kompletar-broz.pdf']

#######################
# zaltar

zalmyzaltare = []

adresar_zaltar = 'generovane/zaltar/'

options_zaltar = commonoptions+o_warnmarks
canticleoptions_zaltar = canticleoptions+o_warnmarks

cislazalmu_zaltar = %w( 95 100 67 24

                  141 142 63 149 118i 118ii 118iii 110 114
                  5 29 19b 7i 7ii 11 15
                  33 119alef 13 14 20 21
                  36 47 119beth 17i 17ii 27i 27ii
                  57 48 119gimel 25i 25ii 30 32
                  51 119dalet 26 28 41 46
                  119kof 117 119he 34i 34ii
                  
                  119nun 16 118 150 23 76i 76ii 115
                  42 19a 119vau 40i 40ii 45i 45ii
                  43 65 119zajin 53 54 49i 49ii
                  77 97 119chet 55i 55ii 62
                  80 81 119tet 56 57 72i 72ii
                  147ii 119jod 59 60 116i 121
                  92 8 119kaf 61 64
                  
                  113 116ii 93 148 111
                  84 96 119lamed 71i 71ii 123 124
                  85 119mem 74i 74ii 125 131
                  86 98 70 75 126 127
                  87 99 119samech 79 132i 132ii
                  22i 22ii 22iii 135i 135ii
                  119ajin
                  
                  122 130 112
                  90 119pe 82 120 136i 136ii
                  101 144 119sade 88i 88ii 137 138
                  108 146 94i 94ii 139i 139ii
                  143 147i 119res 128 129 144i 144ii
                  119sin 133 140 145i 145ii
                  119tau

                  30i 30ii 86i 96i 96ii
                  )

cislazalmu_zaltar.each do |z|
  zalmyzaltare << genzalm("zalm"+z+".zalm", options_zaltar, adresar_zaltar)
end

dan3ioptions = commonoptions_withoutdoxology+o_canticletitle+" --append \"\\rubrikaPo{Na konci tohoto kantika se nepřipojuje doxologie Sláva Otci.}\""

# jedine kantikum bez doxologie
zalmyzaltare << genzalm('kantikum_dan3i.zalm', dan3ioptions, adresar_zaltar)
# ostatni kantika
%w( fp2 ef1 zj4 kol1 zj11 zj15

1kron29 tob13i jdt16 jer31 iz45 ex15 
dan3ii sir36 iz38 1sam2 iz12 hab3 
dt32 iz2 iz26 iz33 iz40 jer14 mdr9
iz42 dan3iii iz61 iz66 tob13ii ez36 ).each do |kk| 
  zalmyzaltare << genzalm("kantikum_#{kk}.zalm", canticleoptions_zaltar, adresar_zaltar)
end
# this canticle is special: it needs a special title, because it's preceded by a rubric.
zalmyzaltare << genzalm("kantikum_1petr2.zalm", canticleoptions_zaltar+" --title-pattern \\\\nadpisZalmuBezMezery{#}", adresar_zaltar)

zalmyzaltare << genzalm('kantikum_benedictus.zalm', options_zaltar+" --pretitle \"Zachariášovo kantikum (Benedictus)\\\\\\\\ \"", adresar_zaltar)
zalmyzaltare << genzalm('kantikum_magnificat.zalm', options_zaltar+" --pretitle \"kantikum Panny Marie (Magnificat)\\\\\\\\ \"", adresar_zaltar)
# zalmyzaltare << genzalm('kantikum_zj19.zalm', '--no-formatting '+canticleoptions)

file adresar_zaltar+'svatecnizaltar_index.txt.index.tex' => ['svatecnizaltar_index.txt', '../nastroje/listofpsalms.rb'] do
  sh "#{RUBY_COMMAND} ../nastroje/listofpsalms.rb -d #{adresar_zaltar} svatecnizaltar_index.txt"
end

file "antifonar_zaltar.pdf" => ['antifonar_zaltar.tex', 'kantikum_zj19.tex', 'spolecne.tex', 'znacky.tex', adresar_zaltar+'svatecnizaltar_index.txt.index.tex']+zalmyzaltare do
  2.times { 
    # sh "cslatex antifonar_zaltar" 
    sh "pdflatex -shell-escape -output-directory=vystup antifonar_zaltar"
  }
  # sh "dvipdf antifonar_zaltar.dvi"
end

desc "Psalter."
task :zaltar => ["antifonar_zaltar.pdf"]

# Zatimco 'brozurkovy ' kompletar je tisten jako sesitek (stranky A4 se
# prehnou, poskladaji do sebe a uprostred sesiji), zaltar je velky a
# nasledujici uloha ho chysta vazbu -
# vytvari slozky po 12 stranach (3 listy A4 uprostred prehnute a slozene do sebe)
file 'vystup/antifonar_zaltar-broz.pdf' => ["antifonar_zaltar.pdf"] do |t|
  nws = t.prerequisites.first.gsub(/\..+$/, '') # input file without suffix
  sh "pdfbook -o vystup --signature 12 --suffix broz #{nws}.pdf"
end

desc "Psalter arranged for printing"
task :zaltar_book => ['vystup/antifonar_zaltar-broz.pdf']

desc "Remove ALL files generated during the creation of a psalter."
task :zaltar_clean => [:zaltar_texclean] do
  sh 'rm generovane/zaltar/zalm*.tex'
  sh 'rm generovane/zaltar/kantikum*.tex'
end

desc "Remove LaTeX files generated during the creation of a psalter."
task :zaltar_texclean do
  (['pdf', 'aux', 'log', 'out'].map {|e| "antifonar_zaltar."+e}).each {|f|
    if File.exists? f then
      sh "rm #{f}"
    end
  }
end

###############
# sv. 5: zaltar pro slavnosti a svatky

svatzalt_adresar = 'generovane/svatecnizaltar/'

svatzalt_kantika = []
%w( ef1 fp2 kol1 1petr2 zj4 zj11 zj15 zj19
      iz38 hab3 ).each do |k|
  svatzalt_kantika << genzalm("kantikum_"+k+".zalm", canticleoptions, svatzalt_adresar)
end
svatzalt_kantika << genzalm("kantikum_dan3i.zalm", dan3ioptions, svatzalt_adresar)

file svatzalt_adresar+'svatecnizaltar_index.txt.index.tex' => ['svatecnizaltar_index.txt', '../nastroje/listofpsalms.rb'] do
  sh "#{RUBY_COMMAND} ../nastroje/listofpsalms.rb -d #{svatzalt_adresar} svatecnizaltar_index.txt"
end

task :svatzalt_zalmy => [svatzalt_adresar+'svatecnizaltar_index.txt.psalmsnums'] do |t|
  File.open(t.prerequisites.first, 'r') do |f|
    # vlastni zalmy pro slavnosti a svatky - nacist cisla z generovaneho seznamu:
    f.each_line do |n|
      z = genzalm("zalm"+n.strip+".zalm", commonoptions, svatzalt_adresar)
      Rake::Task[z].invoke
    end
    # zalmy invitatoria a rannich chval ne 1. tydne a doplnovaciho cyklu:
    [95,100,67,24,
    63, 149,
    120,121,122, 123,124,125, 126,127,128].each do |n|
      z = genzalm("zalm"+n.to_s+".zalm", commonoptions, svatzalt_adresar)
      Rake::Task[z].invoke
    end
  end
end

file "antifonar_svatecnizaltar.pdf" => ['antifonar_svatecnizaltar.tex', 'spolecne.tex', 'znacky.tex', svatzalt_adresar+'svatecnizaltar_index.txt.index.tex', :svatzalt_zalmy]+svatzalt_kantika do
  2.times { sh "pdflatex -shell-escape -output-directory=vystup antifonar_svatecnizaltar" }
end

desc "Festal psalter"
task :festzaltar => ['antifonar_svatecnizaltar.pdf']

###############
# sv. 3: zaltar k modlitbe se ctenim

zalmy_cteni = []

adresar_cteni = 'generovane/ctenizaltar/'

cislazalmu_cteni = %w(
                                      1 2 3
                                      6 9i 9ii
                                      10i 10ii 12
                                      18i 18ii 18iii
                                      18iv 18v 18vi
                                      35i 35ii 35iii
                                      )
                                      
cislazalmu_cteni.each do |z|
  zalmy_cteni << genzalm("zalm"+z+".zalm", commonoptions, adresar_zaltar)
end

file "antifonar_ctenizaltar.pdf" => ['antifonar_ctenizaltar.tex', 'spolecne.tex', 'znacky.tex']+zalmy_cteni do
  2.times { 
    sh "pdflatex -shell-escape -output-directory=vystup antifonar_ctenizaltar"
  }
end

desc "Psalter for the reading-office."
task :cteni => ['antifonar_ctenizaltar.pdf']

###############
# sv. 0: uvod

file 'uvod_priklady_1.ly' => ['uvod_priklady.ly'] do
  chdir 'generovane'
  sh "#{RUBY_COMMAND} ../../nastroje/splitscores.rb --prepend-text '\\include \"spolecne_antifonar.ly\"' ../uvod_priklady.ly"
  chdir '..'
end

file 'vystup/antifonar_uvod.tex' => ['antifonar_uvod.lytex', 'uvod_priklady_1.ly'] do
  test_lilypondbook_version
  sh 'lilypond-book --pdf --output=vystup antifonar_uvod.lytex'
end

file 'vystup/antifonar_uvod.pdf' => ['vystup/antifonar_uvod.tex'] do
  chdir 'vystup'
  sh 'pdflatex -shell-escape antifonar_uvod.tex'
  chdir '..'
end

desc "Introduction to the whole set of antiphonal volumes."
task :uvod => ['vystup/antifonar_uvod.pdf']

###############
# sv. 4: nedele - notovane

zalmynedele = []

adresar_nedele = 'generovane/nedele/'

cislazalmu_nedele = %w( 95 100 67 24

                  141 142 63 149 118i 118ii 118iii 110 114

                  119nun 16 118 150 23 76i 76ii 115
                  
                  113 116ii 93 148 111
                  
                  122 130 112
                  )

nedelecommonoptions = commonoptions+" --columns"

nedele_splitscores_command = splitscores_command + " --output-dir #{adresar_nedele} "

cislazalmu_nedele.each do |z|
  zalmynedele << genzalm("zalm"+z+".zalm", nedelecommonoptions, adresar_nedele)
end

nedelecanticleoptions = nedelecommonoptions+o_canticletitle

zalmynedele << genzalm('kantikum_fp2.zalm', nedelecanticleoptions, adresar_nedele)

zalmynedele << genzalm('kantikum_dan3i.zalm', dan3ioptions+" --columns", adresar_nedele)
zalmynedele << genzalm('kantikum_dan3ii.zalm', nedelecanticleoptions, adresar_nedele)

zalmynedele << genzalm('kantikum_benedictus.zalm', nedelecommonoptions+" --pretitle \"Zachariášovo kantikum (Benedictus)\\\\\\\\ \"", adresar_nedele)
zalmynedele << genzalm('kantikum_magnificat.zalm', nedelecommonoptions+" --pretitle \"kantikum Panny Marie (Magnificat)\\\\\\\\ \"", adresar_nedele)

noty_nedele = (1..4).map do |i| 
  # nazev vygenerovaneho souboru s prvni antifonou
  afn = adresar_nedele+"tyden#{i.to_s}_1nedele_1ne-ant1.ly"
  # zpracovavany soubor s antifonami
  sfn = "../antifony/tyden#{i.to_s}_1nedele.ly"
  
  file afn => [sfn] do
    sh nedele_splitscores_command + sfn
  end
  
  afn
end

file adresar_nedele+'invitatoria_t1ne.ly' => ['../antifony/invitatoria.ly'] do |t|
  sh nedele_splitscores_command + t.prerequisites.first
end
noty_nedele << adresar_nedele+'invitatoria_t1ne.ly'

file adresar_nedele+'nedele_verse_ne1v.ly' => ['nedele_verse.ly'] do |t|
  # verse nemaji odsazovani a proto maji svuj vlastni delici prikaz:
  sh "#{RUBY_COMMAND} -I ../nastroje "+ 
          "../nastroje/splitscores.rb "+
                        "--prepend-text '\\include \"spolecne_antifonar.ly\"\n \\include \"../dilyresponsorii.ly\"' "+
                        "--insert-text \"\\layout { indent = 0 \n short-indent = 0\\cm \n"+
                                                                            "\\context {\n \\Staff \n \\consists Custos_engraver \n \\override Custos #'style = #'hufnagel }"+
                                                                            "}\n\" "+
                        "--remove-headers "+
                        " --output-dir #{adresar_nedele} "+
                        "--one-clef "+
                        "--ids " + t.prerequisites.first
end
noty_nedele << adresar_nedele+'nedele_verse_ne1v.ly'

file "vystup/antifonar_nedele.tex" => (["antifonar_nedele.lytex", "kantikum-Zj19.ly", "spolecne_antifonar.ly"]+zalmynedele+noty_nedele) do
  test_lilypondbook_version
  sh "lilypond-book --output=vystup --pdf antifonar_nedele.lytex"
end

file 'vystup/antifonar_nedele.pdf' => ['vystup/antifonar_nedele.tex', 'spolecne.tex'] do
  chdir 'vystup'
  2.times { sh 'pdflatex -shell-escape antifonar_nedele.tex' }
  chdir '..'
end

desc "Sunday antiphonal."
task :nedele => ['vystup/antifonar_nedele.pdf']

###############
# sv. 6:  velikonocni triduum - notovane

zalmy_triduum = []
noty_triduum = []
adresar_triduum = 'generovane/triduum/'
options_triduum = commonoptions+o_warnmarks

triduum_splitscores_command = splitscores_command + " --output-dir #{adresar_triduum} "

zalmy_triduum << genzalm('kantikum_benedictus.zalm', options_triduum+" --pretitle \"Zachariášovo kantikum (Benedictus)\\\\\\\\ \"", adresar_triduum)
zalmy_triduum << genzalm('kantikum_magnificat.zalm', options_triduum+" --pretitle \"kantikum Panny Marie (Magnificat)\\\\\\\\ \"", adresar_triduum)

%w( 95 
        72i 72ii
        51 147ii   54 88   116ii 143 
        64 150     30
        63 149     118i 118ii 118iii   110 114
        
        120 121 122 123 124 125 126 127 128 ).each do |z|
  zalmy_triduum << genzalm("zalm"+z+".zalm", options_triduum, adresar_triduum)
end
zalmy_triduum << genspojenyzalm(['zalm40i.zalm', 'zalm40ii.zalm'], 'zalm40.tex', options_triduum+" --title-pattern '\\nadpisZalmu{Žalm 40, 2-14.17-18}'", adresar_triduum)
zalmy_triduum << genspojenyzalm(['zalm27i.zalm', 'zalm27ii.zalm'], 'zalm27.tex', options_triduum+" --title-pattern '\\nadpisZalmu{Žalm 27}'", adresar_triduum)
zalmy_triduum << genspojenyzalm(['zalm76i.zalm', 'zalm76ii.zalm'], 'zalm76.tex', options_triduum+" --title-pattern '\\nadpisZalmu{Žalm 76}'", adresar_triduum)

%w( zj11 hab3 fp2 iz38 dan3i ).each do |k|
  zalmy_triduum << genzalm("kantikum_"+k+".zalm", options_triduum, adresar_triduum)
end

noty_triduum = {'../pust_triduum.ly' => 'pa-invit', 
                '../velikonoce_velikonocnioktav.ly' => 'invit',
                'triduum_verse.ly' => 'ne'}.map do |file, sampleid| 
  # nazev vygenerovaneho souboru s prvni antifonou
  afn = adresar_triduum+File.basename(file).gsub('.ly', '_'+sampleid+'.ly')
  # zpracovavany soubor s antifonami
  sfn = file
  
  file afn => [sfn] do
    sh triduum_splitscores_command + sfn
  end
  
  afn
end

file "vystup/antifonar_triduum.tex" => (["antifonar_triduum.lytex", "spolecne_antifonar.ly", "../dilyresponsorii.ly"]+zalmy_triduum+noty_triduum) do |t|
  test_lilypondbook_version
  sh "lilypond-book --output=vystup --pdf "+t.prerequisites.first
end

file 'vystup/antifonar_triduum.pdf' => ['vystup/antifonar_triduum.tex', 'spolecne.tex', 'rubriky.tex'] do |t|
  chdir 'vystup'
  2.times { sh 'pdflatex -shell-escape antifonar_triduum.tex' }
  chdir '..'
end

desc "Triduum sacrum."
task :triduum => ['vystup/antifonar_triduum.pdf']

###############
# material k responsorialnimu prednesu zalmu 136

file "generovane/zalm136responsorialni.tex" => ["zalmy/zalm136responsorialni.zalm"] do
  chdir "generovane"
  sh "ruby ../../nastroje/psalmpreprocessor.rb --no-formatting ../zalmy/zalm136responsorialni.zalm"
  chdir ".."
end

file "vystup/zalm136.tex" => ["generovane/zalm136responsorialni.tex", "zalm136noty.ly", "spolecne.tex"] do
  sh "lilypond-book --out=vystup --pdf zalm136.lytex"
end

file "vystup/zalm136.pdf" => ["vystup/zalm136.tex"] do
  cd "vystup"
  sh "pdflatex -shell-escape zalm136"
  cd ".."
end

desc "Psalm 136 - responsorial arrangement."
task :zalm136 => ["vystup/zalm136.pdf"]

######################################################
# Nesporni zpevy (nespory nejvetsich slavnosti liturgickeho roku
# pro farni provoz)

adresar_nesporni = 'generovane/nespornizpevy/'
nesporni_splitscores_command = "#{RUBY_COMMAND} -I ../nastroje "+ 
          "../nastroje/splitscores.rb "+
                        "--prepend-text '\\include \"nespornizpevy/spolecne_nespory.ly\"\n\\include \"../dilyresponsorii.ly\"' "+
                        # "--remove-headers "+
                        # "--mode-info "+
                        "--one-clef "+
                        "--ids " + " --output-dir #{adresar_nesporni} "
nesporni_options = "--accents-style bold --guillemets --append \""+
  "\n\nSláva [Ot]ci i [Sy]nu * 
i [Du]chu [sva]tému, 
jako byla na počátku, i [ny]ní i [vždyc]ky * 
a na vě/ky [vě]ků. [A]men.\""

# pole: [prvni polovers:[akcentu, pripravnych slabik], druhy:...]
psalmodie = {
  'I.D' => [[2,0], [1,2]],
  'I.D2' => [[2,0], [1,2]],
  'II.D' => [[1,0], [1,1]],
  'III.a' => [[2,0], [1,1]],
  'IV.E' => [[1,2], [1,3]],
  'VII.a' => [[2,0], [2,0]],
  'VII.c' => [[2,0], [2,0]],
  'VIII.G' => [[1,0], [1,2]],
  'per' => [[1,3], [1,1]]}
nesporni_zalmy = {
  '47' => 'VIII.G',
  '110' => 'VII.a',
  '111' => 'VII.c',
  '112' => 'III.a',
  '114' => 'per',
  '116i' => 'II.D',
  '116ii' => 'II.D',
  '122' => 'I.D2',
  '127' => 'IV.E',
  '130' => 'VII.c'
}
nesporni_kantika = {
  'magnificat' => 'VIII.G',
  'kol1' => 'VIII.G'}
$skip_verses = {'magnificat' => 2}

def ps_accents(pattern)
  return "#{pattern[0][0]}:#{pattern[1][0]}"
end

def ps_prep(pattern)
  return "#{pattern[0][1]}:#{pattern[1][1]}"
end

def ps_skip(canticle)
  if $skip_verses[canticle] != nil then
    return $skip_verses[canticle]
  else
    return 1
  end
end

nesporni_zalmotexty_pec = []

nesporni_kantika.each_pair do |canticle,psalmcode|
  wd = Dir.pwd
  syrovy = "nespornizpevy/zalmy/kantikum_"+canticle+'.zalm'
  peceny = adresar_nesporni+"kantikum_"+canticle+'.tex'
  preprocessor = wd+"/../nastroje/psalmpreprocessor.rb"
  psalm_pattern = psalmodie[psalmcode]
  file peceny => [syrovy, preprocessor] do
    chdir adresar_nesporni
    sh "#{RUBY_COMMAND} #{preprocessor} #{nesporni_options} --accents #{ps_accents(psalm_pattern)} --preparatory-syllables #{ps_prep(psalm_pattern)} --skip-verses #{ps_skip(canticle)} ../../#{syrovy}"
    chdir wd
    sh "vlna #{peceny}"
  end
  nesporni_zalmotexty_pec << peceny
end

nesporni_zalmy.each_pair do |psalm,psalmcode|
  wd = Dir.pwd
  syrovy = "nespornizpevy/zalmy/zalm"+psalm+'.zalm'
  peceny = adresar_nesporni+"zalm"+psalm+'.tex'
  preprocessor = wd+"/../nastroje/psalmpreprocessor.rb"
  psalm_pattern = psalmodie[psalmcode]
  file peceny => [syrovy, preprocessor] do
    chdir adresar_nesporni
    sh "#{RUBY_COMMAND} #{preprocessor} #{nesporni_options} --accents #{ps_accents(psalm_pattern)} --preparatory-syllables #{ps_prep(psalm_pattern)} --skip-verses #{ps_skip(psalm)} ../../#{syrovy}"
    chdir wd
    sh "vlna #{peceny}"
  end
  nesporni_zalmotexty_pec << peceny
end

noty_nesporni = {
  'nespornizpevy/zalmy.ly' => 'z110',
  'nespornizpevy/tonicommunes.ly' => 'pospes',
  'nespornizpevy/antifony_vanoce.ly' => 'narozeni-ant1',
  'nespornizpevy/antifony_velikonoce.ly' => 'zmrtvychvstani-ant3'}.map do |file, sampleid| 
  # nazev vygenerovaneho souboru s prvni antifonou
  afn = adresar_nesporni+File.basename(file).gsub('.ly', '_'+sampleid+'.ly')
  # zpracovavany soubor s antifonami
  sfn = file
  
  file afn => [sfn] do
    sh nesporni_splitscores_command + sfn
  end
  
  afn
end

file "vystup/nespornizpevy.tex" => ['nespornizpevy.lytex', 'nespornizpevy/spolecne_nespory.ly']+noty_nesporni+nesporni_zalmotexty_pec do |t|
  sh "lilypond-book --out=vystup --pdf "+t.prerequisites.first
end

file 'vystup/nespornizpevy.pdf' => ['vystup/nespornizpevy.tex'] do
  cd 'vystup'
  2.times { sh 'pdflatex nespornizpevy' }
  cd '..'
end

task :nesporni => ["vystup/nespornizpevy.pdf"]

task :nesporni_clean => [:snipclean] do
  sh "rm -rf vystup/nespornizpevy.*"
  sh "rm -rf generovane/nespornizpevy/*"
end
